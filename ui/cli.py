from rich.console import Console
from rich.prompt import Prompt, Confirm
from rich.panel import Panel
from rich.style import Style
from typing import Optional
from core.models import PasswordEntry
from core.database import DatabaseManager


class CLIInterface:
    """–†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Å–æ–ª—å–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞."""

    def __init__(self):
        self.console = Console()
        self.db = DatabaseManager(console=self.console)
        self.db.initialize()

    def show_menu(self) -> int:
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
        menu = Panel(
            "1. –î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å\n2. –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–ø–∏—Å–∏\n3. –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\n4. –£–¥–∞–ª–∏—Ç—å\n5. –í—ã—Ö–æ–¥",
            title="üîê [bold]–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–∞—Ä–æ–ª–µ–π[/]",
            border_style=Style(color="blue")
        )
        self.console.print(menu)
        return int(Prompt.ask("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", choices=["1", "2", "3", "4", "5"]))

    def run(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
        while True:
            try:
                choice = self.show_menu()

                if choice == 1:
                    self._handle_add_entry()
                elif choice == 2:
                    self._handle_view_entries()  # –¢–µ–ø–µ—Ä—å –º–µ—Ç–æ–¥ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                elif choice == 3:
                    self._handle_edit_menu()
                elif choice == 5:
                    if Confirm.ask("–í—ã–π—Ç–∏ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã?"):
                        break

            except ValueError:
                self.console.print("[red]–û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 5![/]")
            except Exception as e:
                self.console.print(f"[red]–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}[/]")

    def _handle_add_entry(self):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏."""
        entry = PasswordEntry()
        entry.name = Prompt.ask("–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–∞")
        entry.login = Prompt.ask("–õ–æ–≥–∏–Ω")
        entry.password = Prompt.ask("–ü–∞—Ä–æ–ª—å", password=True)
        entry.description = Prompt.ask("–û–ø–∏—Å–∞–Ω–∏–µ", default="")

        if Confirm.ask("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å?"):
            entry_id = self.db.add_entry(entry)
            self.console.print(f"[green]–ó–∞–ø–∏—Å—å #{entry_id} —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞![/]")

    def _handle_delete_entry(self, entry_id: int) -> bool:
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏."""
        if Confirm.ask("[red]–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å?[/]"):
            if self.db.delete_entry(entry_id):
                self.console.print("[green]–ó–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞![/]")
                return True
            else:
                self.console.print("[red]–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏![/]")
        return False

    def _handle_view_entries(self):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–ø–∏—Å–µ–π –∏ –¥–µ—Ç–∞–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–π."""
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ –∏–∑ –ë–î
        with self.db._get_connection() as conn:
            cursor = conn.cursor()
            cursor.execute("SELECT id, name FROM entries")
            entries = cursor.fetchall()

        if not entries:
            self.console.print("[yellow]–ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π.[/]")
            return

        # –í—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫
        self.console.print("[bold]–°–ø–∏—Å–æ–∫ –∑–∞–ø–∏—Å–µ–π:[/]")
        for entry_id, name in entries:
            self.console.print(f"[cyan]{entry_id}.[/] {name}")

        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≤—ã–±–æ—Ä –∑–∞–ø–∏—Å–∏
        selected_id = Prompt.ask("\n–í–≤–µ–¥–∏—Ç–µ ID –∑–∞–ø–∏—Å–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞", default="", show_default=False)

        if not selected_id.isdigit():
            self.console.print("[red]–û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–π ID![/]")
            return

        # –ü–æ–ª—É—á–∞–µ–º –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        entry = self.db.get_entry(int(selected_id))
        if entry:
            self._display_entry_details(entry)
        else:
            self.console.print("[red]–ó–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞![/]")

    def _display_entry_details(self, entry: PasswordEntry):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –¥–µ—Ç–∞–ª–∏ –∑–∞–ø–∏—Å–∏ –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è."""
        while True:  # –î–æ–±–∞–≤–ª—è–µ–º —Ü–∏–∫–ª –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            self.console.print(f"\n[bold]–î–µ—Ç–∞–ª–∏ –∑–∞–ø–∏—Å–∏ #{entry.id}:[/]")
            self.console.print(f"–ù–∞–∑–≤–∞–Ω–∏–µ: [green]{entry.name}[/]")
            self.console.print(f"–õ–æ–≥–∏–Ω: [green]{entry.login}[/]")
            self.console.print(f"–ü–∞—Ä–æ–ª—å: [green]{entry.password}[/]")
            if entry.description:
                self.console.print(f"–û–ø–∏—Å–∞–Ω–∏–µ: [green]{entry.description}[/]")

            action = Prompt.ask(
                "\n(e) –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å | (d) –£–¥–∞–ª–∏—Ç—å | (b) –ù–∞–∑–∞–¥",
                choices=["e", "d", "b"],
                default="b"
            )

            if action == "e":
                self._handle_edit_entry(entry.id)
                entry = self.db.get_entry(entry.id)  # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            elif action == "d":
                if self._handle_delete_entry(entry.id):
                    break  # –í—ã—Ö–æ–¥–∏–º –µ—Å–ª–∏ –∑–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞
            elif action == "b":
                break

    def _handle_edit_menu(self):
        """–ú–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
        entry_id = Prompt.ask("–í–≤–µ–¥–∏—Ç–µ ID –∑–∞–ø–∏—Å–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        if entry_id.isdigit():
            self._handle_edit_entry(int(entry_id))
        else:
            self.console.print("[red]–ù–µ–≤–µ—Ä–Ω—ã–π ID![/]")

    def _handle_edit_entry(self, entry_id: int):
        """–†–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∑–∞–ø–∏—Å—å —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –∏–∑–º–µ–Ω–µ–Ω–∏–π."""
        entry = self.db.get_entry(entry_id)
        if not entry:
            self.console.print("[red]–ó–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞![/]")
            return

        self.console.print("\n[bold]–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏:[/]")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
        original_values = {
            'name': entry.name,
            'login': entry.login,
            'password': entry.password,
            'description': entry.description
        }

        # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        new_values = {
            'name': Prompt.ask("–ù–∞–∑–≤–∞–Ω–∏–µ", default=entry.name),
            'login': Prompt.ask("–õ–æ–≥–∏–Ω", default=entry.login),
            'password': Prompt.ask("–ü–∞—Ä–æ–ª—å", password=True, default=entry.password),
            'description': Prompt.ask("–û–ø–∏—Å–∞–Ω–∏–µ", default=entry.description)
        }

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∏ –ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
        if all(new_values[key] == original_values[key] for key in new_values):
            self.console.print("[yellow]–ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è[/]")
            return

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–ª–∏—á–∏—è
        self.console.print("\n[bold]–ò–∑–º–µ–Ω–µ–Ω–∏—è:[/]")
        for key in new_values:
            if new_values[key] != original_values[key]:
                self.console.print(
                    f"{key}: [red]{original_values[key]}[/] ‚Üí [green]{new_values[key]}[/]"
                )

        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        if Confirm.ask("\n–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è?"):
            # –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—ä–µ–∫—Ç –∑–∞–ø–∏—Å–∏
            entry.name = new_values['name']
            entry.login = new_values['login']
            entry.password = new_values['password']
            entry.description = new_values['description']

            if self.db.update_entry(entry):
                self.console.print("[green]–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞![/]")
            else:
                self.console.print("[red]–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏![/]")